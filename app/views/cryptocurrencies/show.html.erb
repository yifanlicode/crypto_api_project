<%= render @cryptocurrency %>

 <div class="my-3">
  <div class="row justify-content-center">
  
    <div class="col-auto">
      <%= link_to "Back to Coins List",
          cryptocurrencies_path,
          class: "btn btn-secondary" %>
    </div>
    
    <div class="col-auto">
      <%= link_to "Add to watchlist",
          watchlists_path(@cryptocurrency),
          class: "btn btn-primary" %>
    </div>
    <div class="col-auto">
      <%= button_to "Delete from watchlist",
          watchlists_path(@watchlist),
          class: "btn btn-dark",
          method: :delete,
          data: { confirm: "Are you sure?" },
          autocomplete:"off" %>
    </div>
  </div>
</div>


  <%# Show sparkline with Chart.js %>
  <script type="text/javascript">
          
        document.addEventListener("DOMContentLoaded", function () {
          const ctx = document
            .getElementById("sparkline-<%= dom_id @cryptocurrency %>")
            .getContext("2d");

          const data = <%= @sparkline_data.to_json.html_safe %>;
          var chart = new Chart(ctx, {
            type: "line",
            data: {
              labels: Array.from({ length: data.length }, (_, i) => ""),
              datasets: [
                {
                  label: "Price",
                  data: data,
                  backgroundColor: "rgba(255, 99, 132, 0.2)",
                  borderColor: "rgba(255, 99, 132, 1)",
                  borderWidth: 1,
                  fill: true,
                  tension: 0.4,
                },
              ],
            },
            options: {
              responsive: true,
              maintainAspectRatio: false,
              scales: {
                x: {
                  display: false,
                },
                y: {
                  display: false,
                  ticks: {
                    callback: function (value, index, values) {
                      // Convert large numbers to abbreviated format
                      const abbreviations = ["K", "M", "B", "T"];
                      let newValue = value;
                      let suffix = "";
                      if (newValue >= 1000) {
                        const suffixIndex = Math.floor(Math.log10(newValue) / 3);
                        newValue /= 1000 ** suffixIndex;
                        suffix = abbreviations[suffixIndex - 1];
                      }
                      return newValue + suffix;
                    },
                  },
                  min: Math.min(...data) * 0.95,
                  max: Math.max(...data) * 1.05,
                },
              },
              plugins: {
                legend: {
                  display: false,
                },
                tooltip: {
                  enabled: false,
                },
              },
            },
          });
        });
  </script>


  


